{
	"info": {
		"_postman_id": "1fc632b1-4439-43ef-83e7-196710953987",
		"name": "assignment2-ecommerce node Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "Get users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"pm.environment.get(\"variable_key\");\r",
									"pm.environment.get(\"variable_key\");\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Returned value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    if(!(jsonData.length == 0)) {\r",
									"        pm.expect(jsonData[0].name).to.eql(\"Karan\");\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.test(\"Failed status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/users",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Returned value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    if(!(jsonData.length == 0)) {\r",
									"        pm.expect(jsonData.name).to.eql(\"Karan\");\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.test(\"Failed status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Missing value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User not found\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/users/62309e195e765c1ba9f28af2",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"users",
								"62309e195e765c1ba9f28af2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User deleted successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Failed status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Missing value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User not found\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/users/6230a13c4ae579aadde4bb6c",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"users",
								"6230a13c4ae579aadde4bb6c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User updated successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Failed status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Missing value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User not found\");\r",
									"});\r",
									"\r",
									"pm.test(\"Duplicate value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Invalid form data\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"Karan\",\n    \"username\" :\"kdsingh\",\n    \"phone\":\"9832422343\",\n    \"shipping_address\":\"king st, waterloo\",\n    \"email\":\"ksingh@cofye.com\",\n    \"password\":\"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/users/62309e195e765c1ba9f28af2",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"users",
								"62309e195e765c1ba9f28af2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Returned value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    if(!(jsonData.length == 0)) {\r",
									"        pm.expect(jsonData[0].name).to.eql(\"Karan\");\r",
									"    }\r",
									"})\r",
									"\r",
									"pm.test(\"Failed status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"Karan\",\n    \"username\" :\"ksingh\",\n    \"phone\":\"98324222343\",\n    \"shipping_address\":\"king st, waterloo\",\n    \"email\":\"ksingh@cofyase.com\",\n    \"password\":\"password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/users",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "products",
			"item": [
				{
					"name": "Get products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Returned value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    if(!(jsonData.length == 0)) {\r",
									"        pm.expect(jsonData[0].title).to.eql(\"a\");\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.test(\"Failed status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/products",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Returned value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    if(!(jsonData.length == 0)) {\r",
									"        pm.expect(jsonData.title).to.eql(\"COFYE A\");\r",
									"    }\r",
									"});\r",
									"\r",
									"pm.test(\"Failed status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Missing value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Product not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/products/6238c4f5af1cec63ed16cb27",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"products",
								"6238c4f5af1cec63ed16cb27"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Product deleted successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Failed status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Missing value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Product not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/products/6238c4f5af1cec63ed16cb27",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"products",
								"6238c4f5af1cec63ed16cb27"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Product created successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Failed status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "COFYE E",
									"type": "text"
								},
								{
									"key": "description",
									"value": "The COFYE E coffee maker combines precision brewing, top-quality construction, and a design that will elevate any environment. Designed for perfect brewing from 16 to 40 ounces, the Eight uses a smart brewing algorithm to mimic hand-made pour over coffee. ",
									"type": "text"
								},
								{
									"key": "price",
									"value": "6",
									"type": "text"
								},
								{
									"key": "quantity",
									"value": "7",
									"type": "text"
								},
								{
									"key": "thumbnail_image",
									"type": "file",
									"src": "/Users/ashok/Downloads/5 copy 2.png"
								},
								{
									"key": "banner_image",
									"type": "file",
									"src": "/Users/ashok/Downloads/5 copy 2.png"
								},
								{
									"key": "shipping_cost",
									"value": "8",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/products/",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"products",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Product updated successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Failed status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Missing value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Product not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "a",
									"type": "text"
								},
								{
									"key": "description",
									"value": "b",
									"type": "text"
								},
								{
									"key": "price",
									"value": "3",
									"type": "text"
								},
								{
									"key": "quantity",
									"value": "3",
									"type": "text"
								},
								{
									"key": "thumbnail_image",
									"type": "file",
									"src": "/Users/ashok/Desktop/1nhqil.jpeg"
								},
								{
									"key": "banner_image",
									"type": "file",
									"src": "/Users/ashok/Desktop/1nhqil.jpeg"
								},
								{
									"key": "shipping_cost",
									"value": "2",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/products/6238c4f5af1cec63ed16cb27",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"products",
								"6238c4f5af1cec63ed16cb27"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cart items",
			"item": [
				{
					"name": "Get all carts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/carts/",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"carts",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get cart items by user id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/carts/62309e195e765c1ba9f28af2",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"carts",
								"62309e195e765c1ba9f28af2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete cart items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Cart deleted successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Failed status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Missing value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Cart not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/carts/6238a70fa3a02b591bd86aba",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"carts",
								"6238a70fa3a02b591bd86aba"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Item added in cart successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Failed status test\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Invalid form data\");\r",
									"});\r",
									"\r",
									"pm.test(\"Duplicate value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Cart already exist for user for product . Try updating it\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"quantity\":\"9\",\n    \"product_id\":\"6230a953eb075eb87a9a7614\",\n    \"user_id\":\"62309e195e765c1ba9f28af2\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/carts/",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"carts",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Cart updated successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Failed status test\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Invalid form data\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"quantity\":\"6\",\n    \"product_id\":\"6230a953eb075eb87a9a7614\",\n    \"user_id\":\"62309e195e765c1ba9f28af2\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/carts/6238a70fa3a02b591bd86aba",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"carts",
								"6238a70fa3a02b591bd86aba"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Get orders by user id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/orders/62309e195e765c1ba9f28af2",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"orders",
								"62309e195e765c1ba9f28af2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Order deleted successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Failed status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Missing value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Cart not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/orders/62309e195e765c1ba9f28af2",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"orders",
								"62309e195e765c1ba9f28af2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create order item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Order created successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Failed status test\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Invalid form data\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"quantity\":9,\n    \"product_id\":\"6238c4f5af1cec63ed16cb27\",\n    \"user_id\":\"62309e195e765c1ba9f28af2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/orders",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "update orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Order updated successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Failed status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Missing value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Order not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"order_status\":\"TEST\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/orders?id=6238ce53f1a5102924f1f1e3",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"orders"
							],
							"query": [
								{
									"key": "id",
									"value": "6238ce53f1a5102924f1f1e3"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Get comments by product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/comments?product_id=9",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"comments"
							],
							"query": [
								{
									"key": "product_id",
									"value": "9"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Comments deleted successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Failed status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Missing value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Comment not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/comments?id=2",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"comments"
							],
							"query": [
								{
									"key": "id",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Post comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Successful value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Comment created successfully\");\r",
									"});\r",
									"\r",
									"pm.test(\"Failed status test\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid value test\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Invalid form data\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "text",
									"value": "a",
									"type": "text"
								},
								{
									"key": "user_id",
									"value": "5",
									"type": "text"
								},
								{
									"key": "comment_image",
									"type": "file",
									"src": "test.jpg"
								},
								{
									"key": "banner_image",
									"type": "file",
									"src": "test.jpg"
								},
								{
									"key": "rating",
									"value": "2",
									"type": "text"
								},
								{
									"key": "product_id",
									"value": "2",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{ASSIGNMENT_URL}}/api/comments",
							"host": [
								"{{ASSIGNMENT_URL}}"
							],
							"path": [
								"api",
								"comments"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "ASSIGNMENT_URL",
			"value": "http://localhost/assignment-php/"
		}
	]
}